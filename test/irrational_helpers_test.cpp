#include <catch2/catch.hpp>
#include <real/real.hpp>
#include <real/irrational_helpers.hpp>
#include <string>

TEST_CASE( "Compute irrational numbers", "[irrational]" ) {

    SECTION("2000 bits of pi computed with BBP algorithm") {
        std::string pi
        for(int i = 1; i <= pi.length(); i++){
            CHECK(boost::real::irrational::pi_binary_get_nth_digit(i) == (pi[i-1] - '0'));
        }
    }
}
